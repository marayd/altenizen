plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.8"
    id 'org.jetbrains.kotlin.jvm'
//    id("io.papermc.paperweight.userdev") version "1.7.7"
}
group = 'xyz.kameoka'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    google()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://maven.citizensnpcs.co/repo"
    }
    maven { url 'https://nexus.scarsz.me/content/groups/public/' }
    maven {
        name = 'plasmoverse-releases'
        url = 'https://repo.plasmoverse.com/releases'
    }
    maven {
        name = 'plasmoverse-snapshots'
        url = 'https://repo.plasmoverse.com/snapshots'
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        name = "TarsosDSP repository"
        url = "https://mvn.0110.be/releases"
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    compileOnly("com.denizenscript:denizen:1.3.0-SNAPSHOT")
    compileOnly "su.plo.voice.server:paper:2.1.1-SNAPSHOT"
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    implementation 'be.tarsos.dsp:core:2.5'
    implementation 'org.ow2.asm:asm:9.6'
    implementation("com.alphacephei:vosk:0.3.45")
    implementation("com.google.guava:guava:33.4.0-jre")
    implementation("org.jsoup:jsoup:1.18.3")
//    implementation("club.minnced:opus-java:1.1.1")
//    implementation("club.minnced:opus-java:1.1.1")
}

tasks.build {
    dependsOn shadowJar
}

tasks.shadowJar {
//    manifest {
//        attributes(
//                'paperweight-mappings-namespace': 'mojang'
//        )
//    }
    relocate("kotlin", "xyz.kameoka.libs.kotlin")
    relocate("kotlinx.coroutines", "xyz.kameoka.coroutines")
    relocate("kotlinx.serialization", "xyz.kameoka.serialization")
    relocate("kotlinx.serialization", "xyz.kameoka.serialization")
    exclude 'com/denizenscript/**'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(21)
}
